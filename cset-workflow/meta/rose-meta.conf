# Workflow's configuration metadata
[template variables]

################################################################################
# Environment
################################################################################

[template variables=SITE]
ns=Environment
description=Which institution to load the site-specific configuration for.
help=The site-specific configuration should live in a file under site/
    For example the Met Office configuration lives under "site/metoffice.cylc".

    Localhost does not use any site-specific settings, and should work on any
    cylc installation. It will however run on the scheduler server.
values="localhost", "metoffice", "niwa"
value-titles=Localhost, Met Office, NIWA
compulsory=true
sort-key=env-000

[template variables=CSET_ENV_USE_MODULES]
ns=Environment
title=Use modules for environment
description=Use Linux modules to load the environment.
type=python_boolean
compulsory=true
trigger=template variables=MODULES_PURGE: True;
        template variables=MODULES_LIST: True;
sort-key=env-010

[template variables=MODULES_PURGE]
ns=Environment
description=Purge modules that are not explicitly specified.
help=Remove any modules that are loaded by default before loading the specified
    ones. This is recommended as it makes your workflows more explicit and less
    deendent on site-specific details, increasing portability.
type=python_boolean
sort-key=env-011

[template variables=MODULES_LIST]
ns=Environment
description=Modules to load.
type=spaced_list
length=:
sort-key=env-021

[template variables=CSET_ENV_USE_CONDA]
ns=Environment
title=Use conda for environment
description=Use a conda environment.
help=The conda environment is loaded after any modules.
type=python_boolean
compulsory=true
trigger=template variables=CONDA_VENV_LOCATION: True;
        template variables=CONDA_VENV_CREATE: True;
        template variables=CONDA_PATH: True;
sort-key=env-030

[template variables=CONDA_PATH]
ns=Environment
description=Where to get conda from. Leave blank if conda already on path.
help=Path where the conda executable is. This should be to a directory, rather
    to a binary itself. Leave this field blank if conda comes from another
    source, such as modules or being already on path.
type=quoted
sort-key=env-031

[template variables=CONDA_VENV_CREATE]
ns=Environment
description=Whether to (re)create the conda environment.
help=When enabled it will check that the conda environment exists and is
    up-to-date, recreating it otherwise.
type=python_boolean
sort-key=env-032

[template variables=CONDA_VENV_LOCATION]
ns=Environment
description=Location of the conda virtual environment.
help=The can be found by running `conda env list` and copying the path displayed
    there. If unspecified it defaults to the workflow share directory.
type=quoted
sort-key=env-033

[template variables=CSET_ENV_USE_LOCAL_CSET]
ns=Environment
description=Whether to use a local version of CSET
help=Use a local version of CSET, rather than the version provided from conda.
    This is especially useful for running development versions.
type=python_boolean
compulsory=true
trigger=template variables=CSET_LOCAL_CSET_PATH: True;
sort-key=env-036

[template variables=CSET_LOCAL_CSET_PATH]
ns=Environment
description=Path to local copy of CSET.
help=Path to either a wheel file, or a checked out copy of the CSET git repo.
    For the repository, it should be the path to the directory containing the
    pyproject.toml file.
type=quoted
sort-key=env-037

[template variables=CSET_ENV_SEPARATE_MET]
ns=Environment
description=Separately source MET, rather than using modules or conda.
type=python_boolean
trigger=template variables=MET_INSTALL_DIR: True;
        template variables=CONDA_METPLUS_VENV_LOCATION: True;
        template variables=METPLUS_BASE: True;
        template variables=MET_LIBRARIES: True;
compulsory=true
sort-key=env-040

[template variables=CONDA_METPLUS_VENV_LOCATION]
ns=Environment
description=Location of the conda virtual environment needed by METplus.
type=quoted
sort-key=env-041

[template variables=MET_INSTALL_DIR]
ns=Environment
description=Path where MET is installed to.
type=quoted
sort-key=env-042

[template variables=METPLUS_BASE]
ns=Environment
description=Path where METplus is installed to.
type=quoted
sort-key=env-043

[template variables=MET_LIBRARIES]
ns=Environment
description=Path to libraries needed by MET.
type=quoted
sort-key=env-044


################################################################################
# General
################################################################################

[template variables=LOGLEVEL]
ns=General
description=How detailed the logs should be.
help=INFO only shows a general overview of what is happening, while DEBUG enables
    in-operator logging, but produces a lot of spurious output.
values="INFO", "DEBUG"
compulsory=true
sort-key=gen-000

[template variables=HOUSEKEEPING_MODE]
ns=General
description=How much housekeeping deletes.
help=None will delete nothing.

    Debug will only delete the downloads of initial data, and will keep
    intermediate files.

    Standard deletes most intermediate files, save for the final data that is
    plotted.
values=0, 1, 2
value-titles=None, Debug, Standard
compulsory=true
sort-key=gen-010

[template variables=WEB_DIR]
ns=General
description=Path to directory that is served by the webserver.
help=This will probably be under $HOME/public_html or similar. You will want to
    ensure a subfolder is used as multiple files will be written here.
type=quoted
compulsory=true
sort-key=gen-020

[template variables=WEB_ADDR]
ns=General
description=The address at which the website is served.
help=This should be the address where your public_html or equivalent is served.
    It might include a partial path, such as your username.
type=quoted
compulsory=true
sort-key=gen-021

[template variables=CLEAN_WEB_DIR]
ns=General
description=Delete existing output in WEB_DIR.
help=Whether to remove any existing files in WEB_DIR before running CSET. CSET
    will not overwrite files, so if this is not set the workflow will stop on
    encountering pre-existing files.
type=python_boolean
compulsory=true
sort-key=gen-022

[template variables=CSET_RUNAHEAD_LIMIT]
ns=General
description=Number of simultaneous cycles.
help=The maximum number of cycles run in parallel. A larger number here will
    finish quicker, but utilise more compute resources at once. For a large
    enough workflow it may overwhelm the batch submission system, so it is
    recommended to keep this below 10. Must be positive.
type=integer
compulsory=true
sort-key=gen-032


################################################################################
# Data and Cycling
################################################################################

[template variables=CSET_INITIAL_CYCLE_POINT]
ns=Data and Cycling
description=Datetime of initial cycle point.
help=This should be an ISO 8601 datetime string indicating when you want the
    cycling component of CSET to begin. E.g. 2000-01-01T00:00Z
type=quoted
compulsory=true
sort-key=gen-030

[template variables=CSET_FINAL_CYCLE_POINT]
ns=Data and Cycling
description=Datetime of final cycle point.
help=This should be an ISO 8601 datetime string indicating when you want the
    cycling component of CSET to finish. E.g. 2000-01-01T00:00Z
type=quoted
compulsory=true
sort-key=gen-031

[template variables=CSET_CYCLE_PERIOD]
ns=Data and Cycling
description=Period of each cycle.
help=ISO 8601 duration for the length of the data in each cycle.
type=quoted
compulsory=true
sort-key=gen-039

[template variables=CSET_INCREMENTAL_OUTPUT]
ns=Data and Cycling
description=Write partial output before cycle end.
help=Whether to write partial output plots before the end of the workflow.
    Enabling this will slow the workflow, but allows for inspecting output before
    the workflow is complete.

    Only recommended for long running (multi-hour+) workflows.
type=python_boolean
trigger=template variables=CSET_INCREMENTAL_OUTPUT_PERIOD: True;
compulsory=true
sort-key=gen-035

[template variables=CSET_INCREMENTAL_OUTPUT_PERIOD]
ns=Data and Cycling
description=Period of updating output plots.
help=ISO 8601 duration for the length of time between updating the output plots.
    Smaller values will frequently update the output plots, but use more compute.

    To avoid races, the total length of the cycles must be an integer multiple
    of the CSET_CYCLE_PERIOD.
type=quoted
compulsory=true
sort-key=gen-036

# Input data settings.
[template variables=FETCH_FCST_OPT_CONF]
ns=Data and Cycling
description=From whence to retrieve the forecast.
help=System from which to retrieve the forecast data. Filesystem is generic,
    while the others are site-specific.
values="filesystem", "mass"
value-titles=Filesystem, MASS
compulsory=true
sort-key=gen-040

[template variables=CSET_INPUT_FILE_PATH]
ns=Data and Cycling
description=The path to the forecast.
help=Path to the forecast data on your chosen storage system. Can contain wildcards.
type=quoted
compulsory=true
sort-key=gen-041

[template variables=CSET_INCREMENTAL_DATA_FETCH]
ns=Data and Cycling
description=Collect only the needed input files for each time step.
help=Whether to collect input data only when it is needed. This requires some
    additional setup, so is only recommended when your input data is large
    relative to your disk space.
type=python_boolean
trigger=template variables=CSET_FILE_NAME_METADATA_PATTERN: True;
        template variables=CSET_TIMES_PER_FILE: True;
        template variables=CSET_FILE_TIME_OFFSET: True;
compulsory=true
sort-key=gen-050

[template variables=CSET_FILE_NAME_METADATA_PATTERN]
ns=Data and Cycling
description=Template string identifying the metadata within the filename.
help=The pattern format is the filename with a number of placeholders added to
    mark where the time information is. You must have enough information to
    get the validity time, either directly from the validity time, or derived
    from the initiation time and lead time. Placeholders marked with † are optional.

    Validity time placeholders:
    * ``{valid_year}``
    * ``{valid_month}``
    * ``{valid_word_month}``
    * ``{valid_day}``
    * ``{valid_hour}``†
    * ``{valid_minute}``†

    Initiation time placeholders:
    * ``{init_year}``
    * ``{init_month}`` Numeric month, e.g: 02
    * ``{init_word_month}`` Wordy month, e.g: feb
    * ``{init_day}``
    * ``{init_hour}``†
    * ``{init_minute}``†
    * ``{lead_hour}``
type=quoted
compulsory=true
sort-key=gen-052

[template variables=CSET_TIMES_PER_FILE]
ns=Data and Cycling
description=Number of cycle periods in each file.
help=The number of cycle periods (as defined by CSET_CYCLE_PERIOD) within each input
    file. Normally this will be the number of timesteps per file.
type=integer
compulsory=true
sort-key=gen-053

[template variables=CSET_FILE_TIME_OFFSET]
ns=Data and Cycling
description=Offset between filename time and data time.
help=Indicates the offset in time periods between the marked validity time
    and the earliest time in the file.

    E.g. if the filename time was 06:00, then +2 would mean the first contained
    time was 04:00, while -2 would mean the first time was 08:00.
type=integer
compulsory=true
sort-key=gen-054


################################################################################
# Diagnostics
################################################################################

[template variables=METPLUS_POINT_STAT]
ns=Diagnostics
description=Run METplus point stat in the workflow.
help=TODO: Write help text.
type=python_boolean
trigger=template variables=METPLUS_OPT_CONFIG_KEYS: True;
        template variables=METPLUS_OBS_DIR: True;
compulsory=true
sort-key=diag-030

[template variables=METPLUS_OPT_CONFIG_KEYS]
ns=Diagnostics
description=Which METplus configuration to run.
help=TODO: Write help text.
type=quoted
value-hints="metoffice", "niwa"
sort-key=diag-031

[template variables=METPLUS_OBS_DIR]
ns=Diagnostics
description=Path to directory containing observations in MET ASCII format.
help=TODO: Write help text.
type=quoted
sort-key=diag-032

[template variables=DETERMINISTIC_PLOT_SURFACE_AIR_TEMP]
ns=Diagnostics
description=Create a plot for the time meaned surface air temperature for a deterministic forecast.
help=See includes/deterministic_plot_surface_air_temp.cylc
type=python_boolean
compulsory=true
sort-key=diag-040

[template variables=DETERMINISTIC_PLOT_AGGREGATE_PRECIPITATION]
ns=Diagnostics
description=Create a plot for time aggregated precipitation.
help=See includes/deterministic_plot_aggregate_precipitation.cylc
type=python_boolean
compulsory=true
sort-key=diag-040

[template variables=DETERMINISTIC_PLOT_MODEL_LEVEL_AIR_TEMP]
ns=Diagnostics
description=Create a plot for time aggregated air temperature on model level.
help=See includes/deterministic_plot_model_level_air_temp.cylc
type=python_boolean
compulsory=true
sort-key=diag-040

[template variables=ENSEMBLE_PLOT_SURFACE_AIR_TEMP]
ns=Diagnostics
description=Create postage-stamp plots for the time meaned surface air temperature for an ensemble forecast.
help=See includes/ensemble_plot_surface_air_temp.cylc
type=python_boolean
compulsory=true
sort-key=diag-050

[template variables=MEAN_HOURLY_ACCUMULATED_PRECIPITATION_ENSEMBLE_POSTAGE_STAMP_PLOT]
ns=Diagnostics
description=Create postage-stamp plots for the hourly accumulated precipitation.
help=See includes/mean_hourly_accumulated_precip_ensemble_postage_stamp_plot.cylc
type=python_boolean
compulsory=true
sort-key=diag-060

[template variables=DETERMINISTIC_PLOT_CAPE_RATIO]
ns=Diagnostics
description=Extracts data required for, and calculates the CAPE ratio diagnostic, plotting on a map.
            Required STASH m01s20i114, m01s20i112, m01s20i113.
help=See includes/deterministic_plot_cape_ratio.cylc
type=python_boolean
trigger=template variables=CAPE_RATIO_TIME: True;
compulsory=true
sort-key=diag-070

[template variables=CAPE_RATIO_TIME]
ns=Diagnostics
description=ISO 8601 datetime of when to calculate the CAPE ratio.
help=The datetime must exist in the data. For example, "2020-07-30T17:00Z".
type=quoted
compulsory=true
sort-key=diag-071

[template variables=AOA_DIAG]
ns=Diagnostics
title=Run age of air diagnostic.
description=TODO age of air diagnostic.
help=TODO age of air diagnostic help
type=python_boolean
compulsory=true
trigger=template variables=AOA_PLEV: True;
        template variables=AOA_INCW: True;
        template variables=AOA_CYCLIC: True;
sort-key=diag-072

[template variables=AOA_PLEV]
ns=Diagnostics
title=AOA: Pressure Levels
description=TODO age of air diagnostic.
help=TODO age of air diagnostic help
type=python_list
compulsory=true
sort-key=diag-073

[template variables=AOA_INCW]
ns=Diagnostics
title=AOA: Include vertical?
description=TODO age of air diagnostic.
help=TODO age of air diagnostic help
type=python_boolean
compulsory=true
sort-key=diag-074

[template variables=AOA_CYCLIC]
ns=Diagnostics
title=AOA: Cyclic?
description=TODO age of air diagnostic.
help=TODO age of air diagnostic help
type=python_boolean
compulsory=true
sort-key=diag-075

[template variables=SURFACE_MODEL_FIELDS]
ns=Diagnostics
description=List of standard names of model fields to plot.
type=python_list
compulsory=true
sort-key=diag-080

[template variables=PLOT_SPATIAL_SURFACE_MODEL_FIELD]
ns=Diagnostics
description=Create plots for the specified surface fields.
help=See includes/plot_spatial_surface_model_field.cylc
type=python_boolean
compulsory=true
sort-key=diag-081

[template variables=DOMAIN_MEAN_SURFACE_TIME_SERIES]
ns=Diagnostics
description=Create time series plot of surface field domain mean.
help=See includes/deterministic_domain_mean_surface_time_series.cylc
type=python_boolean
compulsory=true
sort-key=diag-082

[template variables=STASH_CODES]
ns=Diagnostics
description=List of STASH codes to plot.
type=python_list
compulsory=true
sort-key=diag-090

[template variables=PLOT_SPATIAL_STASH_FIELD]
ns=Diagnostics
description=Create plots for the specified STASH fields.
help=See includes/plot_spatial_stash_field.cylc
type=python_boolean
compulsory=true
sort-key=diag-091

[template variables=DOMAIN_MEAN_TIME_SERIES_STASH]
ns=Diagnostics
description=Create time series plot of the STASH fields domain mean.
help=See includes/domain_mean_time_series_stash.cylc
type=python_boolean
compulsory=true
sort-key=diag-092
